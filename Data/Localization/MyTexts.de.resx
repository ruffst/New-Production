<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root"
    xmlns=""
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>

<!-- Eigene Sprachdaten-->

  <!--Cube Blocks Produktion-->

    <!--0. buildstufe / Basic-->

      <data name="DisplayName_Block_Holzvergaser" xml:space="preserve">
        <value>Holzvergaser</value>
      </data>
      <data name="Description_Holzvergaser" xml:space="preserve">
        <value>Basic Technologie um Energie aus Holz zu erzeugen</value>
      </data>

      <data name="DisplayName_Block_MiniHolzvergaser" xml:space="preserve">
        <value>Mini Holzvergaser</value>
      </data>
      <data name="Description_MiniHolzvergaser" xml:space="preserve">
        <value>Basic Technologie um Energie aus Holz zu erzeugen</value>
      </data>

      <data name="DisplayName_Block_SpawnOreDetector" xml:space="preserve">
        <value>SpawnOreDetector</value>
      </data>
      <data name="Description_SpawnOreDetector" xml:space="preserve">
        <value>Basic Technologie um Energie aus Holz zu erzeugen</value>
      </data>

      <data name="DisplayName_Block_Basic_Battery" xml:space="preserve">
        <value>Starter Batterie</value>
      </data>
      <data name="Description_Basic_Battery" xml:space="preserve">
        <value>Basic Technologie um Energie aus Holz zu erzeugen</value>
      </data>

      <data name="DisplayName_Block_Basic_Cargo" xml:space="preserve">
        <value>Basic Cargo Container</value>
      </data>
      <data name="Description_Basic_Cargo" xml:space="preserve">
        <value>Basic Technologie um Energie aus Holz zu erzeugen</value>
      </data>

      <data name="DisplayName_Block_Basic_Sorter" xml:space="preserve">
        <value>Basic Sortierer</value>
      </data>
      <data name="Description_Basic_Sorter" xml:space="preserve">
        <value></value>
      </data>

      <data name="DisplayName_Block_SmallBlockGyro_Basic" xml:space="preserve">
        <value>Kleines Basic Gyroskop</value>
      </data>
      <data name="Description_SmallBlockGyro_Basic" xml:space="preserve">
        <value></value>
      </data>

      <data name="DisplayName_Block_OxygenGeneratorBasic" xml:space="preserve">
        <value>Basic Sauerstoff Generator</value>
      </data>
      <data name="Description_OxygenGeneratorBasic" xml:space="preserve">
        <value></value>
      </data>

      <data name="DisplayName_Block_DeleteProtectionLarge" xml:space="preserve">
        <value>Großer Löschschutz Block</value>
      </data>
      <data name="Description_DeleteProtectionLarge" xml:space="preserve">
        <value></value>
      </data>

      <data name="DisplayName_Block_DeleteProtectionSmall" xml:space="preserve">
        <value>Kleiner Löschschutz Block</value>
      </data>
      <data name="Description_DeleteProtectionSmall" xml:space="preserve">
        <value></value>
      </data>

      <data name="DisplayName_Block_CollectorBasic" xml:space="preserve">
        <value>Basic Sammler</value>
      </data>
      <data name="Description_CollectorBasic" xml:space="preserve">
        <value></value>
      </data>

      <data name="DisplayName_Block_ConnectorBasic" xml:space="preserve">
        <value>Basic Verbinder</value>
      </data>
      <data name="Description_ConnectorBasic" xml:space="preserve">
        <value></value>
      </data>

    <!--1. buildstufe-->

      <data name="DisplayName_Block_Rohrextruder" xml:space="preserve">
        <value>Rohrextruder</value>
      </data>
      <data name="Description_Rohrextruder" xml:space="preserve">
        <value></value>
      </data>

      <data name="DisplayName_Block_Plattenpresse" xml:space="preserve">
        <value>Plattenpresse</value>
      </data>
      <data name="Description_Plattenpresse" xml:space="preserve">
        <value></value>
      </data>

      <data name="DisplayName_Block_BasicAssembler" xml:space="preserve">
        <value>BasicAssembler</value>
      </data>
      <data name="Description_BasicAssembler" xml:space="preserve">
        <value>Köhler zur Herstellung von Kohlenstoff aus Holz oder Eisen</value>
      </data>

      <data name="DisplayName_Block_KohlenstofReactorSmall" xml:space="preserve">
        <value>Kleiner Kohlenstoff Generator</value>
      </data>
      <data name="Description_KohlenstofReactorSmall" xml:space="preserve">
        <value>Erzeugt Energie aus Kohlenstoff</value>
      </data>

      <data name="DisplayName_Block_KohlenstoffReactorLarge" xml:space="preserve">
        <value>Großer Energie aus Kohlenstoff</value>
      </data>
      <data name="Description_KohlenstoffReactorLarge" xml:space="preserve">
        <value>Erzeugt Energie aus Kohlenstoff</value>
      </data>

    <!--2. buildstufe-->

      <data name="DisplayName_Block_Drahtextruder" xml:space="preserve">
        <value>Drahtextruder</value>
      </data>
      <data name="Description_Drahtextruder" xml:space="preserve">
        <value>Maschine zum ziehen von Drähten</value>
      </data>

      <data name="DisplayName_Block_Wickelmaschine" xml:space="preserve">
        <value>Wickelmaschine</value>
      </data>
      <data name="Description_Wickelmaschine" xml:space="preserve">
        <value>Maschine zum Wickel von Spulen aus Draht </value>
      </data>

    <!--3. buildstufe-->

      <data name="DisplayName_Block_Blast_Furnace" xml:space="preserve">
        <value>Großer Lichtbogenofen</value>
      </data>
      <data name="Description_Blast_Furnace" xml:space="preserve">
        <value>Verarbeitung von Grundmaterialien unter verwendung von Hochen Strommengen. Die aus dem Hamsterrad kommen.</value>
      </data>

      <data name="DisplayName_Block_VoidMiner" xml:space="preserve">
        <value>Penetratium Converter</value>
      </data>
      <data name="Description_VoidMiner" xml:space="preserve">
        <value>Saugt Erze aus Paralleluniversen und wandelt diese direkt in Barren um. Verbraucht dabei Penetratium und Strom</value>
      </data>

      <data name="DisplayName_Block_PenetratiumSocket" xml:space="preserve">
        <value>Penetratium Kristallisator Sockel</value>
      </data>
      <data name="Description_PenetratiumSocket" xml:space="preserve">
        <value>Penetratium Kristallisator Sockel für Opitsche optimierung (Lampe)</value>
      </data>

      <data name="DisplayName_Block_PenetratiumCrystaliyzer" xml:space="preserve">
        <value>Penetratium Kristallisator</value>
      </data>
      <data name="Description_PenetratiumCrystaliyzer" xml:space="preserve">
        <value>Kristallisiert das Erz in eine verwendbare Form</value>
      </data>

      <data name="DisplayName_Block_Recycler" xml:space="preserve">
        <value>Altmaterial Wiederverwerter</value>
      </data>
      <data name="Description_Recycler" xml:space="preserve">
        <value>Maschine zur Wiederaufbereitung von Schrott</value>
      </data>

      <data name="DisplayName_Block_Elektro_Assembler" xml:space="preserve">
        <value>Elektro Bauteilfabrikator</value>
      </data>
      <data name="Description_Elektro_Assembler" xml:space="preserve">
        <value>Maschine zum Produktion von Elektro Bauteilen und Computer Komponenten.</value>
      </data>

    <!--4. buildstufe-->

      <data name="DisplayName_Block_Forschungslabor" xml:space="preserve">
        <value>Forschungslabor</value>
      </data>
      <data name="Description_Forschungslabor" xml:space="preserve">
        <value>Forschungslabor zur Herstellung von Meilensteinmaterial. Die meißten Meilensteine sind nach dem Bau des Labors baubar. Einige sind verschachtelt</value>
      </data>

      <data name="DisplayName_Block_Fertiger" xml:space="preserve">
        <value>Fertiger</value>
      </data>
      <data name="Description_Fertiger" xml:space="preserve">
        <value>Maschine zur Fertigung vom fertigen Bautteilgruppen</value>
      </data>

      <data name="DisplayName_Block_Legierer" xml:space="preserve">
        <value>Legierer</value>
      </data>
      <data name="Description_Legierer" xml:space="preserve">
        <value>Der Legierer ist zum Verschmelzen verschiedener Materialien. Nickelaluminium, Nickeltitan und Litium und Neodynium aus Kies</value>
      </data>

      <data name="DisplayName_Block_VerbrauchsmaterialAssembler" xml:space="preserve">
        <value>Tools Assembler</value>
      </data>
      <data name="Description_VerbrauchsmaterialAssembler" xml:space="preserve">
        <value>Maschine zur Herstellung von Werkzeugen, Verbrauchsgütern und Munition</value>
      </data>

      <data name="DisplayName_Block_BasicSmallBlockDrill" xml:space="preserve">
        <value>Basic Drill</value>
      </data>
      <data name="Description_BasicSmallBlockDrill" xml:space="preserve">
        <value>Er bohrt nicht Tief, er bohrt nicht groß, doch sein Strom verbrauche der ist Famos. So bohret lang und bohret viel, dann ist der Hand Drill aus dem Spiel.</value>
      </data>

    <!--Basic Conveyors-->

      <data name="DisplayName_Block_SmallBlockConveyorBasic" xml:space="preserve">
        <value>Small Block Conveyor Basic</value>
      </data>
      <data name="Description_SmallBlockConveyorBasic" xml:space="preserve">
        <value>Schweres Basic Förderband</value>
      </data>

      <data name="DisplayName_Block_ConveyorTubeSmallBasic" xml:space="preserve">
        <value>Conveyor Tube Small Basic</value>
      </data>
      <data name="Description_ConveyorTubeSmallBasic" xml:space="preserve">
        <value>Schweres Basic Förderband</value>
      </data>

      <data name="DisplayName_Block_ConveyorTubeSmallCurvedBasic" xml:space="preserve">
        <value>Conveyor Tube Small Curved Basic</value>
      </data>
      <data name="Description_ConveyorTubeSmallCurvedBasic" xml:space="preserve">
        <value>Schweres Basic Förderband</value>
      </data>

      <data name="DisplayName_Block_LargeBlockConveyorBasic" xml:space="preserve">
        <value>Large Block Conveyor Basic</value>
      </data>
      <data name="Description_LargeBlockConveyorBasic" xml:space="preserve">
        <value>Schweres Basic Förderband</value>
      </data>

      <data name="DisplayName_Block_ConveyorTubeBasic" xml:space="preserve">
        <value>Conveyor Tube Basic</value>
      </data>
      <data name="Description_ConveyorTubeBasic" xml:space="preserve">
        <value>Schweres Basic Förderband</value>
      </data>

      <data name="DisplayName_Block_ConveyorTubeCurvedBasic" xml:space="preserve">
        <value>Conveyor Tube Curved Basic</value>
      </data>
      <data name="Description_ConveyorTubeCurvedBasic" xml:space="preserve">
        <value>Schweres Basic Förderband</value>
      </data>



      <data name="DisplayName_Block_" xml:space="preserve">
        <value></value>
      </data>
      <data name="Description_" xml:space="preserve">
        <value></value>
      </data>


    







</root>